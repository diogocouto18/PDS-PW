
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.16.2
 * Query Engine version: 4bc8b6e1b66cb932731fb1bdbbc550d1e010de81
 */
Prisma.prismaVersion = {
  client: "4.16.2",
  engine: "4bc8b6e1b66cb932731fb1bdbbc550d1e010de81"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdministradorScalarFieldEnum = {
  id: 'id',
  username: 'username',
  nome: 'nome',
  email: 'email',
  password_hash: 'password_hash'
};

exports.Prisma.AnuncioScalarFieldEnum = {
  id: 'id',
  cargo: 'cargo',
  descricao: 'descricao',
  data_publicacao: 'data_publicacao',
  estado: 'estado',
  id_administrador: 'id_administrador',
  id_evento: 'id_evento'
};

exports.Prisma.AvaliacaoEventoScalarFieldEnum = {
  id: 'id',
  id_utilizador: 'id_utilizador',
  id_evento: 'id_evento',
  nota: 'nota',
  data_avaliacao: 'data_avaliacao'
};

exports.Prisma.CandidaturaVoluntariadoScalarFieldEnum = {
  id: 'id',
  id_utilizador: 'id_utilizador',
  id_anuncio: 'id_anuncio',
  estado: 'estado'
};

exports.Prisma.CategoriaEventoScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.RifaCompradaScalarFieldEnum = {
  id: 'id',
  id_utilizador: 'id_utilizador',
  id_pagamento: 'id_pagamento',
  estado: 'estado'
};

exports.Prisma.EventoScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  localizacao: 'localizacao',
  descricao: 'descricao',
  data_evento: 'data_evento',
  fotografia: 'fotografia',
  estado: 'estado',
  id_administrador: 'id_administrador',
  id_categoria: 'id_categoria'
};

exports.Prisma.MensagemSuporteScalarFieldEnum = {
  id: 'id',
  id_ticket: 'id_ticket',
  id_utilizador: 'id_utilizador',
  id_administrador: 'id_administrador',
  mensagem: 'mensagem',
  data_abertura: 'data_abertura',
  data_encerramento: 'data_encerramento',
  estado: 'estado'
};

exports.Prisma.NotificacaoScalarFieldEnum = {
  id: 'id',
  id_utilizador: 'id_utilizador',
  id_administrador: 'id_administrador',
  mensagem: 'mensagem',
  data_envio: 'data_envio',
  estado: 'estado'
};

exports.Prisma.PagamentoScalarFieldEnum = {
  id: 'id',
  id_utilizador: 'id_utilizador',
  id_sorteioRifas: 'id_sorteioRifas',
  quantidade: 'quantidade',
  valor: 'valor',
  metodo_pagamento: 'metodo_pagamento',
  estado: 'estado',
  data_pagamento: 'data_pagamento'
};

exports.Prisma.SorteioRifasScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  preco: 'preco',
  quantidade: 'quantidade',
  descricao: 'descricao',
  premio: 'premio',
  data_sorteio: 'data_sorteio',
  estado: 'estado',
  id_administrador: 'id_administrador',
  id_evento: 'id_evento'
};

exports.Prisma.SuporteScalarFieldEnum = {
  id: 'id',
  artigo: 'artigo',
  descricao: 'descricao'
};

exports.Prisma.UtilizadorScalarFieldEnum = {
  id: 'id',
  username: 'username',
  nome: 'nome',
  email: 'email',
  telefone: 'telefone',
  password_hash: 'password_hash',
  morada: 'morada'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Anuncio_estado = {
  Ativo: 'Ativo',
  Terminado: 'Terminado'
};

exports.CandidaturaVoluntariado_estado = {
  Pendente: 'Pendente',
  Aceite: 'Aceite',
  Rejeitado: 'Rejeitado'
};

exports.RifaComprada_estado = {
  Vencedor: 'Vencedor',
  SegundoLugar: 'SegundoLugar',
  TerceiroLugar: 'TerceiroLugar',
  Perdedor: 'Perdedor',
  Pendente: 'Pendente'
};

exports.Evento_estado = {
  Terminado: 'Terminado',
  Ativo: 'Ativo'
};

exports.MensagemSuporte_estado = {
  Aberto: 'Aberto',
  Fechado: 'Fechado'
};

exports.Notificacao_estado = {
  Por_abrir: 'Por_abrir',
  Aberto: 'Aberto'
};

exports.Pagamento_metodo_pagamento = {
  MBWAY: 'MBWAY',
  Entidade_Referencia: 'Entidade_Referencia'
};

exports.Pagamento_estado = {
  Pendente: 'Pendente',
  Pago: 'Pago',
  Falhado: 'Falhado'
};

exports.SorteioRifas_estado = {
  Ativo: 'Ativo',
  Terminado: 'Terminado'
};

exports.Prisma.ModelName = {
  Administrador: 'Administrador',
  Anuncio: 'Anuncio',
  AvaliacaoEvento: 'AvaliacaoEvento',
  CandidaturaVoluntariado: 'CandidaturaVoluntariado',
  CategoriaEvento: 'CategoriaEvento',
  RifaComprada: 'RifaComprada',
  Evento: 'Evento',
  MensagemSuporte: 'MensagemSuporte',
  Notificacao: 'Notificacao',
  Pagamento: 'Pagamento',
  SorteioRifas: 'SorteioRifas',
  Suporte: 'Suporte',
  Utilizador: 'Utilizador'
};

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
